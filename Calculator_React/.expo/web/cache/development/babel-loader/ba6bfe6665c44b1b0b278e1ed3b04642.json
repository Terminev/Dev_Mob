{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\sites\\\\Dev_mob\\\\Calculator_React\\\\App.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport InputButton from \"./src/InputButton\";\nimport Style from \"./src/Style\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport AppRegistry from \"react-native-web/dist/exports/AppRegistry\";\nvar inputButtons = [[][(1, 2, 3, '/')], [4, 5, 6, '*'], [7, 8, 9, '-'], [0, '.', '=', '+']];\n\nvar ReactCalculator = function (_Component) {\n  _inherits(ReactCalculator, _Component);\n\n  var _super = _createSuper(ReactCalculator);\n\n  function ReactCalculator(props) {\n    var _this;\n\n    _classCallCheck(this, ReactCalculator);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      previousInputValue: 0,\n      inputValue: 0,\n      selectedSymbol: null\n    };\n    return _this;\n  }\n\n  _createClass(ReactCalculator, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(View, {\n        style: Style.rootContainer,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 11\n        }\n      }, React.createElement(View, {\n        style: Style.displayContainer,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 15\n        }\n      }, React.createElement(Text, {\n        style: Style.displayText,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 19\n        }\n      }, this.state.inputValue)), React.createElement(View, {\n        style: Style.inputContainer,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 15\n        }\n      }, this._renderInputButtons()));\n    }\n  }, {\n    key: \"_renderInputButtons\",\n    value: function _renderInputButtons() {\n      var views = [];\n\n      for (var r = 0; r < inputButtons.length; r++) {\n        var row = inputButtons[r];\n        var inputRow = [];\n\n        for (var i = 0; i < row.length; i++) {\n          var input = row[i];\n          inputRow.push(React.createElement(InputButton, {\n            value: input,\n            onPress: this._onInputButtonPressed.bind(this, input),\n            key: r + \"-\" + i,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 13\n            }\n          }));\n        }\n\n        views.push(React.createElement(View, {\n          style: Style.inputRow,\n          key: \"row-\" + r,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 18\n          }\n        }, inputRow));\n      }\n\n      return views;\n    }\n  }, {\n    key: \"_onInputButtonPressed\",\n    value: function _onInputButtonPressed(input) {\n      switch (typeof input) {\n        case 'number':\n          return this._handleNumberInput(input);\n\n        case 'string':\n          return this._handleStringInput(input);\n      }\n    }\n  }, {\n    key: \"_handleNumberInput\",\n    value: function _handleNumberInput(num) {\n      var inputValue = this.state.inputValue * 10 + num;\n      this.setState({\n        inputValue: inputValue\n      });\n    }\n  }, {\n    key: \"_handleStringInput\",\n    value: function _handleStringInput(str) {\n      switch (str) {\n        case '/':\n        case '*':\n        case '+':\n        case '-':\n          this.setState({\n            selectedSymbol: str,\n            previousInputValue: this.state.inputValue,\n            inputValue: 0\n          });\n          break;\n\n        case '=':\n          var symbol = this.state.selectedSymbol,\n              inputValue = this.state.inputValue,\n              previousInputValue = this.state.previousInputValue;\n\n          if (!symbol) {\n            return;\n          }\n\n          this.setState({\n            previousInputValue: 0,\n            inputValue: eval(previousInputValue + symbol + inputValue),\n            selectedSymbol: null\n          });\n          break;\n      }\n    }\n  }]);\n\n  return ReactCalculator;\n}(Component);\n\nexport default ReactCalculator;","map":{"version":3,"sources":["C:/sites/Dev_mob/Calculator_React/App.js"],"names":["React","Component","InputButton","Style","inputButtons","ReactCalculator","props","state","previousInputValue","inputValue","selectedSymbol","rootContainer","displayContainer","displayText","inputContainer","_renderInputButtons","views","r","length","row","inputRow","i","input","push","_onInputButtonPressed","bind","_handleNumberInput","_handleStringInput","num","setState","str","symbol","eval"],"mappings":"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","sourcesContent":["\nimport React, { Component } from 'react';\nimport InputButton from './src/InputButton';\nimport Style from './src/Style';\nimport {View,\n Text,\n AppRegistry\n } from 'react-native';\n\n const inputButtons = [\n  []\n  [1, 2, 3, '/'],\n  [4, 5, 6, '*'],\n  [7, 8, 9, '-'],\n  [0, '.', '=', '+']\n];\n \n class ReactCalculator extends Component {\n      constructor(props) {\n        super(props);\n        \n        this.state = {\n          previousInputValue: 0,\n          inputValue: 0,\n          selectedSymbol: null\n        }\n    }\n\n    render() {\n      return (\n          <View style={Style.rootContainer}>\n              <View style={Style.displayContainer}>\n                  <Text style={Style.displayText}>{this.state.inputValue}</Text>\n              </View>\n              <View style={Style.inputContainer}>\n                  {this._renderInputButtons()}\n              </View>\n          </View>\n      )\n  }\n_renderInputButtons() {\n  let views = [];\n\n  for (var r = 0; r < inputButtons.length; r ++) {\n      let row = inputButtons[r];\n\n      let inputRow = [];\n      for (var i = 0; i < row.length; i ++) {\n          let input = row[i];\n\n          inputRow.push(\n            <InputButton\n                value={input}\n                onPress={this._onInputButtonPressed.bind(this, input)}\n                key={r + \"-\" + i}/>\n        );\n      }\n\n      views.push(<View style={Style.inputRow} key={\"row-\" + r}>{inputRow}</View>)\n  }\n\n  return views;\n}\n_onInputButtonPressed(input) {\n  switch (typeof input) {\n      case 'number':\n          return this._handleNumberInput(input)\n      case 'string':\n          return this._handleStringInput(input)\n  }\n}\n_handleNumberInput(num) {\n  let inputValue = (this.state.inputValue * 10) + num;\n\n  this.setState({\n      inputValue: inputValue\n  })\n}\n\n_handleStringInput(str) {\n  switch (str) {\n      case '/':\n      case '*':\n      case '+':\n      case '-':\n          this.setState({\n              selectedSymbol: str,\n              previousInputValue: this.state.inputValue,\n              inputValue: 0\n          });\n          break;\n          case '=':\n                let symbol = this.state.selectedSymbol,\n                    inputValue = this.state.inputValue,\n                    previousInputValue = this.state.previousInputValue;\n\n                if (!symbol) {\n                    return;\n                }\n\n                this.setState({\n                    previousInputValue: 0,\n                    inputValue: eval(previousInputValue + symbol + inputValue),\n                    selectedSymbol: null\n                });\n                break;\n  }\n}\n}\n \n export default ReactCalculator"]},"metadata":{},"sourceType":"module"}